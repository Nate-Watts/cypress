import { rootId } from './constants'
import { ReactElement } from 'react'
import { VueConstructor } from 'vue/types'

export interface StyleOptions {
  // TODO: Do we really need all of these options?
  /**
   * Creates <link href="..." /> element for each stylesheet
   * @alias stylesheet
   */
  stylesheets: string | string[]
  /**
   * Creates <link href="..." /> element for each stylesheet
   * @alias stylesheets
   */
  stylesheet: string | string[]
  /**
   * Creates <style>...</style> element and inserts given CSS.
   * @alias styles
   */
  style: string | string[]
  /**
   * Creates <style>...</style> element for each given CSS text.
   * @alias style
   */
  styles: string | string[]
  /**
   * Loads each file and creates a <style>...</style> element
   * with the loaded CSS
   * @alias cssFile
   */
  cssFiles: string | string[]
  /**
   * Single CSS file to load into a <style></style> element
   * @alias cssFile
   */
  cssFile: string | string[]
}

export interface MountHook { (componentTestInstance: ComponentTestInstance): any }

interface MountHooks { setup: MountHook, mount: MountHook }

export type MountOptions = MountHooks & StyleOptions & {
  mountModeEnabled: boolean
  rootId: string

  // Namespace the framework-specific options
  react?: any
  vue?: any
}

export type Component = ReactElement | VueConstructor | HTMLElement | string | unknown

/** Mount Hooks */
export type ComponentTestInstance = {
  // generated by the test name and Math.random
  key: string

  // Merged options between the user input and defaults
  options: MountOptions

  // The component instance passed into mount
  component: Component

  // Will be set in mount hook
  rootEl?: HTMLElement
}

const NoopMountHook: MountHook = (_) => {}
const DefaultMountHooks = {
  setup: NoopMountHook,
  mount: NoopMountHook,
}

/** Mount Options */
// TODO: do we really need six ways to add stylesheets? Can we just overload one option?
export const DefaultStyleOptions = {
  cssFile: '',
  cssFiles: [],
  styles: '',
  style: '',
  stylesheet: '',
  stylesheets: [],
}

export const DefaultMountOptions: MountOptions = {
  ...DefaultMountHooks,
  ...DefaultStyleOptions,
  mountModeEnabled: true,
  rootId,
}
